1)
Chocolate Distribution Problem

Given an array of N integers where each value represents the number of chocolates in a packet. Each packet can have a variable number of chocolates. There are m students, the task is to distribute chocolate packets such that: 

Each student gets one packet.
The difference between the number of chocolates in the packet with maximum chocolates and the packet with minimum chocolates given to the students is minimum.
Examples:

Input : arr[] = {7, 3, 2, 4, 9, 12, 56} , m = 3 
Output: Minimum Difference is 2 
Explanation:
We have seven packets of chocolates and we need to pick three packets for 3 students 
If we pick 2, 3 and 4, we get the minimum difference between maximum and minimum packet sizes.

Input : arr[] = {3, 4, 1, 9, 56, 7, 9, 12} , m = 5 
Output: Minimum Difference is 6 

Input : arr[] = {12, 4, 7, 9, 2, 23, 25, 41, 30, 40, 28, 42, 30, 44, 48, 43, 50} , m = 7 
Output: Minimum Difference is 10 

Naive Approach for Chocolate Distribution Problem
The idea is to generate all subsets of size m of arr[0..n-1]. For every subset, find the difference between the maximum and minimum elements in it. Finally, return the minimum difference.

Efficient Approach for Chocolate Distribution Problem
The idea is based on the observation that to minimize the difference, we must choose consecutive elements from a sorted packet. We first sort the array arr[0..n-1], then find the subarray of size m with the minimum difference between the last and first elements.

int main(){
	int a[100],i,j,n,m;
	puts("Enter the array size:");
	scanf("%d",&n);
	puts("Enter the array elements:");
	for(i=0;i<n;i++)scanf("%d",&a[i]);
	puts("Enter the number of students:");
	scanf("%d",&m);
	
	for(i=0;i<n-1;i++){
		for(j=i+1;j<n;j++){
			if(a[i]>a[j]){
				a[i]=a[i]+a[j];
				a[j]=a[i]-a[j];
				a[i]=a[i]-a[j];
			}
		}
	}
	
	int mindiff=INT_MAX;
	for(i=0,j=m-1;j<n;i++,j++){
		if(a[j]-a[i]<mindiff)mindiff=a[j]-a[i];
	}
	printf("the minimum difference is %d",mindiff);
	
	//for(i=0;i<n;i++)printf("%d  ",a[i]);

2)
Program to cyclically rotate an array by one

Given an array, the task is to cyclically rotate the array clockwise by one time. 

Examples:  

Input: arr[] = {1, 2, 3, 4, 5}
Output: arr[] = {5, 1, 2, 3, 4}

Input: arr[] = {2, 3, 4, 5, 1}
Output: {1, 2, 3, 4, 5}

int a[100],i,j,n,m;
	puts("Enter the array size:");
	scanf("%d",&n);
	puts("Enter the array elements:");
	for(i=0;i<n;i++)scanf("%d",&a[i]);
	int temp=a[n-1];
	for(i=n-1;i>=1;i--){
		a[i]=a[i-1];
	}
	a[0]=temp;
	puts("after rotate 1 time:");
	for(i=0;i<n;i++)printf("%d ",a[i]); 
Assign every element with its previous element and first element with the last element .

3)
Write a c program to find the K’th Smallest in Unsorted Array | Expected Linear Time
Prerequisite: K’th Smallest

Given an array and a number k where k is smaller than the size of the array, we need to find the k’th smallest element in the given array. It is given that all array elements are distinct.

Examples:

Input: arr[] = {7, 10, 4, 3, 20, 15}
       k = 3
Output: 7

Input: arr[] = {7, 10, 4, 3, 20, 15}
      k = 4
Output: 10
	int a[100],i,j,n,k;
	puts("Enter the array size:");
	scanf("%d",&n);
	puts("Enter the array elements:");
	for(i=0;i<n;i++)scanf("%d",&a[i]);
	puts("Enter the kth smallest nubmer you want to find");
	scanf("%d",&k);
	for(i=0;i<n-1;i++){
		for(j=i+1;j<n;j++){
			if(a[i]>a[j]){
				a[i]=a[i]+a[j];
				a[j]=a[i]-a[j];
				a[i]=a[i]-a[j];
			}
		}
	}
	int small=k;
	for(i=0;i<n;i++){
		if(a[i]<a[i+]){
			small--;
			if(small==0)printf("\n%dth small element is %d",k,a[i]);
		}
	}
4)
Write a c program to merge two array .

input:
Enter the number of elements in the first array: 3
Enter elements of the first array:
1
2
3
Enter the number of elements in the second array: 4
Enter elements of the second array:
4
5
6
7

output:
Merged array:
1 2 3 4 5 6 7 
	int a[100],b[100],i,j,n,m;
	puts("Enter the first array size:");
	scanf("%d",&n);
	puts("Enter the first  array elements:");
	for(i=0;i<n;i++)scanf("%d",&a[i]);
	puts("Enter the second array size:");
	scanf("%d",&m);
	puts("Enter the second array elements:");
	for(i=0;i<m;i++)scanf("%d",&b[i]);
	puts("Merged array is:");
	
	for(j=0,i=n;i<m+n;i++,j++){
		a[i]=b[j];
	}
	for(i=0;i<m+n;i++)printf("%d ",a[i]);
