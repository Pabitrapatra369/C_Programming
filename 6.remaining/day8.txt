 Palindrome.
1 point

Implement a function to check if a given string is a palindrome.

Input: radar

Output: The string is a palindrome.


Input: hello

Output: The string is not a palindrome.


Explanation:

----------------------------------------------------------------------


The isPalindrome function takes a character array (string) str as input and returns a boolean value (true if the string is a palindrome, false otherwise).


The function uses the strlen function from the <string.h> library to determine the length of the input string str.


Two integer variables, start and end, are initialized to 0 and len - 1, respectively. len is the length of the string.


The function uses a while loop that runs as long as start is less than end.


Inside the loop, the function compares the characters at positions start and end in the string. If the characters don't match, it immediately returns false, indicating that the string is not a palindrome.


The loop continues until start becomes greater than or equal to end, at which point the entire string has been checked for palindrome properties.


If all characters match during the loop iterations, the function returns true, indicating that the string is a palindrome.


The main function asks the user to input a string and calls the isPalindrome function with the given input. It then prints whether the input string is a palindrome or not.
=========================================================================================================================
 Sum of all elements
1 point

Create a function to calculate the sum of all elements in an integer array.


Input:

Size of the array: 5

Array elements: 10 20 30 40 50


Output:

Sum of all elements in the array: 150


Explanation:

--------------------------------------------------------------


The arraySum function takes two arguments - an integer array arr and its size size. It returns an integer representing the sum of all elements in the array.


Inside the function, an integer variable sum is initialized to 0. This variable will hold the cumulative sum of the elements as we iterate through the array.


The function uses a for loop to iterate through the array. The loop runs from i = 0 to i < size, covering all elements in the array.


In each iteration, the current element arr[i] is added to the sum variable using the += operator. This accumulates the sum as we move through the array.


Once the loop finishes, the function has added all the elements of the array to the sum.


The function then returns the value of sum, which represents the sum of all elements in the array.


The main function asks the user to input the size of the array and the elements of the array. It then calls the arraySum function with the given input and prints the sum of all elements in the array.
=========================================================================================================================
 Anagrams
1 point

Implement a function to check if two strings are anagrams of each other.


Input:

First string: listen

Second string: silent


Output:

The strings are anagrams.


Input:

First string: hello

Second string: world


Output:

The strings are not anagrams.


sanam
manas
Explanation:

-------------------------------------------------------------


The areAnagrams function takes two character arrays (strings) str1 and str2 as input and returns a boolean value (true if the strings are anagrams, false otherwise).


The function first checks if the lengths of the two strings are different. If they are different, the function immediately returns false, as strings with different lengths cannot be anagrams.


The function then creates two integer arrays freq1 and freq2 of size 256 (assuming ASCII characters) to store the frequency of characters in both strings. Each element of the arrays corresponds to the frequency of a character represented by its ASCII value.


The function then populates the frequency arrays by iterating through the characters of both strings. It counts the occurrences of each character by incrementing the corresponding element in the frequency array.


After populating the frequency arrays, the function compares them to check if the strings are anagrams. If the frequency of any character in str1 differs from the frequency of the same character in str2, the function returns false, as the strings cannot be anagrams.


If the function completes the loop without finding any discrepancies in the frequency arrays, it returns true, indicating that the strings are anagrams of each other.


The main function asks the user to input two strings and calls the areAnagrams function with the given inputs. It then prints whether the input strings are anagrams or not
=========================================================================================================================
Contains only digits.
1 point

Create a function to check if a string contains only digits.


Input:

String: 12345

Output:

Input:

String: 45A7

Output:

The string contains non-digit characters.


Explanation:

-----------------------------------------------------


The containsOnlyDigits function takes a character array (string) str as input and returns a boolean value (true if the string contains only digits, false otherwise).


The function uses a for loop to iterate through the characters of the string. The loop runs until it encounters the null character \0, which marks the end of the string.


In each iteration, the function checks if the current character str[i] is a digit using the isdigit function from the <ctype.h> library. The isdigit function returns a non-zero value if the character is a digit (0 to 9), and it returns 0 otherwise.


If the current character is not a digit (i.e., isdigit(str[i]) returns 0), the function immediately returns false, indicating that the string contains non-digit characters.


If the loop completes without finding any non-digit characters, the function returns true, indicating that the string contains only digits.


The main function asks the user to input a string and calls the containsOnlyDigits function with the given input. It then prints whether the input string contains only digits or not.